{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Environment": {
      "type": "string",
      "allowedValues": [
        "P",
        "U",
        "T",
        "D"
      ],
      "defaultValue": "P",
      "metadata": {
        "description": "Select the Environment you wish to deploy the VM into, P = Production, U = UAT, T = Test, D = Dev"
      }
    },
    "region": {
      "type": "string",
      "allowedValues": [
        "AUSE",
        "AUEA"
      ],
      "defaultValue": "AUSE",
      "metadata": {
        "description": "Select the region for your VNET, AUSE = Melbourne, AUEA = Sydney"
      }
    },
    "vNetName": {
      "type": "string",
      "metadata": {
        "description": "Existing VNET that contains the domain controller"
      }
    },
    "vNetSubnet": {
      "type": "string",
      "metadata": {
        "description": "Existing subnet that contains the domain controller"
      }
    },
    "vNetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of Resource Group which contains the VNET."
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "IMPORTANT - this name is combined with the prefix based on Region and Environment - eg. Prefix = PAUSE, vmName = CNIADFS01, Actual VM Deployed = PAUSECNIADFS01. OVERALL LENGTH OF VM NAMES MUST BE 15 CHARACTERS OR LESS"
      }
    },
    "vmSize": {
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4"
      ],
      "defaultValue": "Standard_A2",
      "metadata": {
        "description": "The size of the virtual machines"
      },
      "type": "string"
    },
    "vmAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM. Exclusion list: 'admin','administrator"
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM"
      }
    },
    "vmPrivateIPaddress": {
      "type": "string",
      "metadata": {
        "Description": "Private IP Address of the NIC."
      }
    },
    "domainToJoin": {
      "type": "string",
      "defaultValue": "corp.domain.com",
      "metadata": {
        "description": "The INTERNAL FQDN of the AD domain"
      }
    },
    "domainUsername": {
      "type": "string",
      "defaultValue": "vandersb-s",
      "metadata": {
        "description": "Username of the account used to join the domain"
      }
    },
    "domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password of the account on the domain"
      }
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "OU=Servers,DC=corp,DC=domain,DC=com",
      "metadata": {
        "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"
      }
    },
    "domainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    },
    "diagnosticStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of Diagnostics Storage Account for Virtual Machine Data."
      }
    },
      "diagnosticStorageAccountResourceGroup": {
        "type": "string",
        "metadata": {
          "description": "Name of Diagnostics Storage Account Resource Group - This is required for the Diagnostics Extension."
        }
      },
    "availabilitySetName": {
      "type": "string",
      "defaultValue": "[tolower(concat(parameters('Environment'),parameters('region'),parameters('vmName'),'-AS1'))]",
      "metadata": {
        "description": "Name of availability set for the VM."
      }
    },
      "imageSKU": {
        "type": "string",
        "allowedValues": [
          "2012-R2-Datacenter",
          "2016-Datacenter"
        ],
        "metadata": {
          "description": "Windows server SKU"
        },
        "defaultValue": "2016-Datacenter"
      }
  },
  "variables": {
    "assetLocation": "https://raw.githubusercontent.com/CNIMelb/Public/master/ARMTemplateAssets/",
    "deploymentPrefix": "[tolower(concat(parameters('Environment'),parameters('Region')))]",
    "virtualMachineName": "[tolower(concat(variables('deploymentPrefix'),parameters('VMName')))]",
    "diagnosticsExtensionName": "IaaSDiagnostics",
    "diagnosticStorageAccountID": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('diagnosticStorageAccountResourceGroup'), '/providers/Microsoft.Storage/storageAccounts/', parameters('diagnosticStorageAccountName'))]",
    "licenseType": "Windows_Server",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "apiVersion": "2015-06-15",
    "nicName": "[tolower(concat(variables('virtualMachineName'),'-Nic01'))]",
    "vnetID": "[resourceId(parameters('vNetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vNetName'))]",
    "subnetId": "[concat(variables('vnetID'),'/subnets/', parameters('vNetSubnet'))]",
    "osDiskName": "[tolower(concat(variables('virtualMachineName'),'-OS-Disk'))]",
    "availabilitySetName": "[tolower(parameters('availabilitySetName'))]"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('vmPrivateIPaddress')]",
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[tolower(variables('availabilitySetName'))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 2
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('virtualMachineName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', tolower(variables('availabilitySetName')))]"
      ],
      "properties": {
        "licenseType": "[variables('licenseType')]",
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('virtualMachineName')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[tolower(parameters('imageSKU'))]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('osDiskName')]",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', tolower(variables('availabilitySetName')))]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',tolower(parameters('diagnosticStorageAccountName')),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "name": "[concat(variables('virtualMachineName'),'/', variables('diagnosticsExtensionName'))]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Diagnostics",
        "type": "IaaSDiagnostics",
        "typeHandlerVersion": "1.5",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "StorageAccount": "[parameters('diagnosticStorageAccountName')]",
          "WadCfg": {
            "DiagnosticMonitorConfiguration": {
              "overallQuotaInMB": 5120,
              "Metrics": {
                "resourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('diagnosticStorageAccountResourceGroup'), '/providers/', 'Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]",
                "MetricAggregation": [
                  {
                    "scheduledTransferPeriod": "PT1H"
                  },
                  {
                    "scheduledTransferPeriod": "PT1M"
                  }
                ]
              },
              "DiagnosticInfrastructureLogs": {
                "scheduledTransferLogLevelFilter": "Error"
              },
              "PerformanceCounters": {
                "scheduledTransferPeriod": "PT1M",
                "PerformanceCounterConfiguration": [
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\% Processor Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\% Privileged Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\% User Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\Processes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Thread Count",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Handle Count",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\System Up Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\Context Switches/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\Processor Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Available Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Committed Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Cache Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Pool Paged Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Pool Nonpaged Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Pages/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Page Faults/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Working Set",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Working Set - Private",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Read Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Write Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Idle Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Bytes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Read Bytes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Write Bytes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Transfers/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Reads/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Writes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Transfer",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Read",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Write",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Read Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Write Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Free Megabytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Bytes Total/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Bytes Sent/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Bytes Received/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Sent/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Received/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Outbound Errors",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Received Errors",
                    "sampleRate": "PT1M"
                  }
                ]
              },
              "WindowsEventLog": {
                "scheduledTransferPeriod": "PT1M",
                "DataSource": [
                  {
                    "name": "Application!*[Application[(Level = 1 or Level = 2 or Level = 3)]]"
                  },
                  {
                    "name": "Security!*[System[band(Keywords,4503599627370496)]]"
                  },
                  {
                    "name": "System!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                  }
                ]
              }
            }
          }
        },
        "protectedSettings": {
          "storageAccountName": "[parameters('diagnosticStorageAccountName')]",
          "storageAccountKey": "[listKeys(variables('diagnosticStorageAccountID'),'2015-06-15').key1]",
          "storageAccountEndPoint": "https://core.windows.net/"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('virtualMachineName'),'/joindomain')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "Name": "[parameters('domainToJoin')]",
          "OUPath": "[parameters('ouPath')]",
          "User": "[concat(parameters('domainToJoin'),'\\', parameters('domainUsername'))]",
          "Restart": "true",
          "Options": "[parameters('domainJoinOptions')]"
        },
        "protectedsettings": {
          "Password": "[parameters('domainPassword')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('virtualMachineName'),'/customScriptExtension')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',variables('virtualMachineName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'), '/extensions/joindomain')]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'), '/extensions/IaaSDiagnostics')]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.7",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('assetlocation'),'/Scripts/srv_initial_conf.ps1')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file srv_initial_conf.ps1')]"
        }
      }
    }
  ]
}


